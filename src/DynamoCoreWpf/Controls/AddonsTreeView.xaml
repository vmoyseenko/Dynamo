<UserControl x:Class="Dynamo.UI.Controls.AddonsTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Dynamo.Controls"
             xmlns:uicontrols="clr-namespace:Dynamo.UI.Controls"
             xmlns:searchCore="clr-namespace:Dynamo.Search;assembly=DynamoCore"
             xmlns:searchElements="clr-namespace:Dynamo.Search.SearchElements;assembly=DynamoCore"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300">
    <UserControl.Resources>

        <!-- Region Converters -->

        <controls:BoolToVisibilityCollapsedConverter x:Key="BoolToVisibilityCollapsedConverter" />
        <controls:BoolToScrollBarVisibilityConverter x:Key="BoolToScrollBarVisibilityConverter" />
        <controls:BrowserItemToBooleanConverter x:Key="BrowserItemToBooleanConverter" />
        <controls:RootElementVMToBoolConverter x:Key="RootElementToBoolConverter" />
        <controls:HasParentRootElement x:Key="HasParentRootElement" />
        <controls:ElementTypeToBoolConverter x:Key="ElementTypeToBoolConverter" />
        <controls:ElementTypeToShorthandConverter x:Key="ElementTypeToShorthandConverter" />

        <!--EndRegion-->

        <!-- Region Styles -->

        <Style x:Key="AddonsTreeView"
               TargetType="{x:Type TreeView}">
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="Background"
                    Value="Black" />
            <Setter Property="Foreground"
                    Value="#DDD" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
                <Setter.Value>
                    <Binding Path="SearchScrollBarVisibility"
                             Converter="{StaticResource BoolToScrollBarVisibilityConverter}" />
                </Setter.Value>
            </Setter>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility">
                <Setter.Value>
                    <Binding Path="SearchScrollBarVisibility"
                             Converter="{StaticResource BoolToScrollBarVisibilityConverter}" />
                </Setter.Value>
            </Setter>
            <Setter Property="Width">
                <Setter.Value>
                    <Binding Path="ActualWidth"
                             RelativeSource="{RelativeSource FindAncestor, 
                                                                     AncestorLevel=1, 
                                                                     AncestorType={x:Type ScrollViewer}}" />
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer Focusable="false"
                                          Background="Transparent"
                                          Padding="{TemplateBinding Padding}"
                                          CanContentScroll="false"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AddonsExpandCollapseToggleStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="Width"
                    Value="24" />
            <Setter Property="Height"
                    Value="Auto" />
            <Setter Property="Padding"
                    Value="0" />
            <Setter Property="Margin"
                    Value="-9,0,0,0" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid MinHeight="27"
                              MinWidth="66"
                              Name="ExpanderButtonBorder">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Image x:Name="ExpandCollapseStateIcon"
                                   Source="/DynamoCore;component/UI/Images/collapsestate_normal.png"
                                   Width="16"
                                   Height="16"
                                   VerticalAlignment="Center" />
                            <ContentPresenter x:Name="HeaderContent"
                                              Grid.Column="1"
                                              ContentSource="Content"
                                              VerticalAlignment="Center"
                                              TextBlock.FontSize="13"
                                              TextBlock.Foreground="#989898" />
                        </Grid>
                        <ControlTemplate.Triggers>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, 
                                                                 Path=IsMouseOver}"
                                               Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, 
                                                                 Path=IsChecked}"
                                               Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Source"
                                            TargetName="ExpandCollapseStateIcon"
                                            Value="/DynamoCore;component/UI/Images/collapsestate_hover.png" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, 
                                                                 Path=IsMouseOver}"
                                               Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, 
                                                                 Path=IsChecked}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Source"
                                            TargetName="ExpandCollapseStateIcon"
                                            Value="/DynamoCore;component/UI/Images/expandstate_hover.png" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, 
                                                                 Path=IsMouseOver}"
                                               Value="False" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, 
                                                                 Path=IsChecked}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Source"
                                            TargetName="ExpandCollapseStateIcon"
                                            Value="/DynamoCore;component/UI/Images/expandstate_normal.png" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <DataTrigger Value="true">
                    <DataTrigger.Binding>
                        <Binding RelativeSource="{RelativeSource Self}"
                                 Path="DataContext"
                                 Converter="{StaticResource RootElementToBoolConverter}" />
                    </DataTrigger.Binding>
                    <Setter Property="Margin"
                            Value="5,0,0,0" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AddonsTreeViewItem"
               TargetType="{x:Type TreeViewItem}"
               d:DataContext="{d:DesignInstance search:BrowserItem }">
            <Setter Property="Focusable"
                    Value="False"></Setter>
            <Setter Property="IsExpanded"
                    Value="{Binding IsExpanded, Mode=OneWay}"></Setter>
            <Setter Property="IsSelected"
                    Value="{Binding IsSelected}"></Setter>
            <Setter Property="Visibility">
                <Setter.Value>
                    <Binding Path="Visibility"
                             Converter="{StaticResource BoolToVisibilityCollapsedConverter}" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Button Command="{Binding ToggleIsExpanded}">
                            <Button.Focusable>False</Button.Focusable>
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Button.Template>

                            <Border Name="ContainerLight"
                                    MouseEnter="OnMemberMouseEnter"
                                    MouseLeave="OnPopupMouseLeave">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Border Name="ToggleButtonAndNodeName"
                                            Grid.Row="0">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                            <ToggleButton Grid.Row="0"
                                                          x:Name="Expander"
                                                          Background="Transparent"
                                                          IsHitTestVisible="False"
                                                          Style="{StaticResource AddonsExpandCollapseToggleStyle}"
                                                          ClickMode="Press"
                                                          IsChecked="{Binding IsExpanded, Mode=OneWay}">
                                            </ToggleButton>
                                            <Border Name="NodeName"
                                                    Grid.Column="1"
                                                    Grid.ColumnSpan="2"
                                                    VerticalAlignment="Center"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Padding="{TemplateBinding Padding}">
                                                <ContentPresenter Grid.Row="0"
                                                                  Grid.Column="1"
                                                                  Grid.ColumnSpan="2"
                                                                  ContentSource="Header" />
                                            </Border>
                                        </Grid>

                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background"
                                                        Value="#353535" />
                                                <Style.Triggers>
                                                    <DataTrigger Value="true">
                                                        <DataTrigger.Binding>
                                                            <Binding RelativeSource="{RelativeSource Self}"
                                                                     Path="DataContext"
                                                                     Converter="{StaticResource RootElementToBoolConverter}" />
                                                        </DataTrigger.Binding>
                                                        <Setter Property="BorderThickness"
                                                                Value="0,0,0,1" />
                                                        <Setter Property="Background"
                                                                Value="#282828" />
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=IsMouseOver}"
                                                                       Value="true" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=DataContext,
                                                                                     Converter={StaticResource RootElementToBoolConverter}}"
                                                                       Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Background"
                                                                    Value="#222222" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=IsMouseOver}"
                                                                       Value="true" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=DataContext,
                                                                                     Converter={StaticResource ElementTypeToBoolConverter}}"
                                                                       Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Background"
                                                                    Value="#595959" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>

                                    <ItemsPresenter x:Name="ItemsHost"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="1"
                                                    Grid.Row="1" />
                                </Grid>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderThickness"
                                                Value="1,0,0,0" />
                                        <Setter Property="Padding"
                                                Value="35,0,0,5" />
                                        <Setter Property="BorderBrush">
                                            <Setter.Value>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Path Data="M 0,0 L 0,30"
                                                              StrokeDashArray="3 4"
                                                              Stroke="#494949"
                                                              StrokeThickness="1">
                                                        </Path>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Value="true">
                                                <DataTrigger.Binding>
                                                    <Binding RelativeSource="{RelativeSource Self}"
                                                             Path="DataContext"
                                                             Converter="{StaticResource HasParentRootElement}" />
                                                </DataTrigger.Binding>
                                                <Setter Property="BorderThickness"
                                                        Value="0,0,0,0" />
                                            </DataTrigger>
                                            <DataTrigger Value="true">
                                                <DataTrigger.Binding>
                                                    <Binding RelativeSource="{RelativeSource Self}"
                                                             Path="DataContext"
                                                             Converter="{StaticResource RootElementToBoolConverter}" />
                                                </DataTrigger.Binding>
                                                <Setter Property="Padding"
                                                        Value="0,0,0,0" />
                                            </DataTrigger>
                                            <DataTrigger Value="false">
                                                <DataTrigger.Binding>
                                                    <Binding RelativeSource="{RelativeSource Self}"
                                                             Path="DataContext"
                                                             Converter="{StaticResource ElementTypeToBoolConverter}" />
                                                </DataTrigger.Binding>
                                                <Setter Property="Padding"
                                                        Value="0,0,0,0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Button>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                                     Value="false">
                                <Setter Property="Visibility"
                                        TargetName="ItemsHost"
                                        Value="Collapsed" />
                            </Trigger>

                            <Trigger Property="HasItems"
                                     Value="false">
                                <Setter Property="Visibility"
                                        TargetName="Expander"
                                        Value="Collapsed" />
                                <Setter Property="Margin"
                                        TargetName="NodeName"
                                        Value="15,0,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CategoryTextBlockStyle"
               TargetType="TextBlock">
            <Setter Property="Foreground"
                    Value="#989898" />
            <Setter Property="FontSize"
                    Value="13" />
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <Binding Path="IsExpanded"
                                 RelativeSource="{RelativeSource FindAncestor, 
                                                                 AncestorType={x:Type TreeViewItem}}" />
                    </DataTrigger.Binding>
                    <Setter Property="TextBlock.FontWeight"
                            Value="SemiBold" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AddonsContextMenu"
               TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="HasDropShadow"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border"
                                Background="#414141"
                                Padding="1,5,1,5">
                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
               TargetType="Separator">
            <Setter Property="Height"
                    Value="1" />
            <Setter Property="Margin"
                    Value="10,2,10,2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border BorderBrush="#494949"
                                BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type MenuItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="#00000000" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                 Color="#00000000" />
            </Style.Resources>
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Foreground"
                    Value="#989898" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border"
                                MinWidth="150">
                            <ContentPresenter Margin="15,5,5,5"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="True">
                                            <Setter Property="Background"
                                                    Value="#343434" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--EndRegion-->

        <!-- Region DataTemplates -->

        <HierarchicalDataTemplate DataType="{x:Type searchCore:BrowserRootElement}"
                                  ItemsSource="{Binding Path=Items}">
            <Border Height="30">
                <Border.ContextMenu>
                    <ContextMenu Style="{StaticResource AddonsContextMenu}">
                        <MenuItem Header="Remove" />
                        <MenuItem Header="Move" />
                        <Separator />
                        <MenuItem Header="Locate in Disk.." />
                    </ContextMenu>
                </Border.ContextMenu>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{StaticResource CategoryTextBlockStyle}"
                               Text="{Binding Path=Name}"
                               VerticalAlignment="Center" />
                    <TextBlock Grid.Column="1"
                               Margin="10,0,10,0"
                               FontSize="10"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Center"
                               Foreground="#989898">
                        <TextBlock.Text>
                            <Binding Path="ElementType"
                                     Converter="{StaticResource ElementTypeToShorthandConverter}" />
                        </TextBlock.Text>
                    </TextBlock>
                    <Image Grid.Column="2"
                           Margin="10,0,10,0"
                           Width="11"
                           Height="13"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Source="/DynamoCore;component/UI/Images/addon_update_available.png">
                        <Image.Visibility>
                            <Binding Path="IsUpdateAvailable"
                                     Converter="{StaticResource BoolToVisibilityCollapsedConverter}" />
                        </Image.Visibility>
                    </Image>
                </Grid>
            </Border>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type searchCore:BrowserInternalElement}"
                                  ItemsSource="{Binding Path=Items}">
            <Border Height="30">
                <TextBlock Style="{StaticResource CategoryTextBlockStyle}"
                           Text="{Binding Path=Name}"
                           VerticalAlignment="Center">
                </TextBlock>
            </Border>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type searchElements:NodeSearchElement}">
            <StackPanel Orientation="Horizontal"
                        Height="40">
                <StackPanel.Width>
                    <Binding Path="ActualWidth"
                             RelativeSource="{RelativeSource FindAncestor, AncestorType=TreeView}" />
                </StackPanel.Width>
                <Image Source="/DynamoCore;component/UI/Images/CustomNode/customNode.png"
                       Margin="30,0,0,0"
                       Width="30"
                       Height="30" />
                <TextBlock Foreground="#DDD"
                           FontSize="13"
                           Text="{Binding Path=Name}"
                           VerticalAlignment="Center" />
            </StackPanel>
        </HierarchicalDataTemplate>

        <!--EndRegion-->

    </UserControl.Resources>
    <StackPanel>
        <Border Background="#353535"
                Height="27">
            <TextBlock Text="Add-ons"
                       VerticalAlignment="Center"
                       FontSize="13"
                       Foreground="#666666"
                       Margin="16,0,0,0" />
        </Border>
        <TreeView ItemsSource="{Binding Model.AddonRootCategories}"
                  Style="{StaticResource AddonsTreeView}"
                  BorderThickness="0"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                  ItemContainerStyle="{StaticResource AddonsTreeViewItem}">
            <TreeView.Template>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </TreeView.Template>
        </TreeView>
        <uicontrols:LibraryToolTipPopup x:Name="libraryToolTipPopup"
                                        StaysOpen="True"
                                        AllowsTransparency="True"
                                        MouseLeave="OnPopupMouseLeave">
            <uicontrols:LibraryToolTipPopup.IsOpen>
                <Binding ElementName="libraryToolTipPopup"
                         Path="DataContext"
                         Mode="OneWay"
                         Converter="{StaticResource BrowserItemToBooleanConverter}" />
            </uicontrols:LibraryToolTipPopup.IsOpen>
        </uicontrols:LibraryToolTipPopup>
    </StackPanel>
</UserControl>
